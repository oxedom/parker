{"ast":null,"code":"var _jsxFileName = \"/home/sam/projects/parker/client/src/comps/Webcam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Webcam = () => {\n  _s();\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getWebcam = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: false\n        });\n        setStream(stream);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getWebcam();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  if (!stream) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading webcam...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      src: stream,\n      width: \"640\",\n      height: \"480\",\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Webcam, \"xks7sNJeZ3JzDQx4lzUvXdlnUro=\");\n_c = Webcam;\nexport default Webcam;\nvar _c;\n$RefreshReg$(_c, \"Webcam\");","map":{"version":3,"names":["React","useState","useEffect","Webcam","stream","setStream","error","setError","getWebcam","navigator","mediaDevices","getUserMedia","video","audio","message"],"sources":["/home/sam/projects/parker/client/src/comps/Webcam.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Webcam = () => {\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getWebcam = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: false\n        });\n        setStream(stream);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getWebcam();\n  }, []);\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n  if (!stream) {\n    return <p>Loading webcam...</p>;\n  }\n\n  return (\n    <div>\n      <video src={stream} width=\"640\" height=\"480\" autoPlay muted />\n    </div>\n  );\n};\n\nexport default Webcam;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMM,SAAS,GAAG,YAAY;MAC5B,IAAI;QACF,MAAMJ,MAAM,GAAG,MAAMK,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UACvDC,KAAK,EAAE,IAAI;UACXC,KAAK,EAAE;QACT,CAAC,CAAC;QACFR,SAAS,CAACD,MAAM,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAAC;MACjB;IACF,CAAC;IACDE,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACT,oBAAO;MAAA,UAAIA,KAAK,CAACQ;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK;EAC/B;EACA,IAAI,CAACV,MAAM,EAAE;IACX,oBAAO;MAAA,UAAG;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAI;EACjC;EAEA,oBACE;IAAA,uBACE;MAAO,GAAG,EAAEA,MAAO;MAAC,KAAK,EAAC,KAAK;MAAC,MAAM,EAAC,KAAK;MAAC,QAAQ;MAAC,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QAC1D;AAEV,CAAC;AAAC,GA/BID,MAAM;AAAA,KAANA,MAAM;AAiCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}