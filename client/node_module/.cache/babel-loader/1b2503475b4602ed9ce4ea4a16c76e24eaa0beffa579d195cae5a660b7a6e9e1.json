{"ast":null,"code":"var _jsxFileName = \"/home/sam/projects/parker/client/src/comps/Camera.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:2000/\");\nconst Camera = () => {\n  _s();\n  const [videoOutput, setVideoOutput] = useState();\n  const inputRef = useRef(null);\n  const outputRef = useRef(null);\n  const getFrame = videoStream => {\n    // create a canvas element to draw the video frame on\n    const canvas = document.createElement(\"canvas\");\n    // get the canvas context\n    const ctx = canvas.getContext(\"2d\");\n    // set the canvas width and height to match the video dimensions\n    canvas.width = videoStream.videoWidth;\n    canvas.height = videoStream.videoHeight;\n\n    // draw the current video frame onto the canvas\n    ctx.drawImage(videoStream, 0, 0, canvas.width, canvas.height);\n    // get the image data from the canvas\n    const imageData = canvas.toDataURL(\"image/jpeg\");\n    return imageData;\n  };\n  const getVideo = () => {\n    socket.connect();\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        width: 720\n      }\n    }).then(stream => {\n      //Gets the current screen\n      let video = inputRef.current;\n      //Sets the Src of video Object\n      video.srcObject = stream;\n      //Plays the video\n      video.play();\n      setInterval(() => {\n        //Sets the output base 64 Images to videooutput\n        socket.on(\"output\", data => {\n          setVideoOutput(data);\n        });\n\n        // get a single frame from the video stream\n        const frame = getFrame(video);\n        // send the frame over the socket connection\n\n        socket.emit(\"stream\", frame);\n        window.requestAnimationFrame(sendFrame);\n      }, 1000);\n      const sendFrame = () => {};\n      sendFrame();\n    }).catch(err => {\n      console.error(\"error:\", err);\n    });\n  };\n  useEffect(() => {\n    getVideo();\n  }, [inputRef]);\n  useEffect(() => {\n    let output = outputRef.current;\n    const updateOutput = () => {\n      if (videoOutput != null) {\n        output.src = videoOutput;\n      }\n      // console.log(1);\n      window.requestAnimationFrame(updateOutput);\n    };\n    updateOutput();\n  }, [videoOutput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Client \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Server \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"sever\",\n        ref: outputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Camera, \"ULsd3TYd1MgFrGlsWPDP/ciw5sA=\");\n_c = Camera;\nexport default Camera;\nvar _c;\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","socket","Camera","videoOutput","setVideoOutput","inputRef","outputRef","getFrame","videoStream","canvas","document","createElement","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","imageData","toDataURL","getVideo","connect","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","play","setInterval","on","data","frame","emit","window","requestAnimationFrame","sendFrame","catch","err","console","error","output","updateOutput","src"],"sources":["/home/sam/projects/parker/client/src/comps/Camera.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:2000/\");\n\nconst Camera = () => {\n  const [videoOutput, setVideoOutput] = useState();\n\n  const inputRef = useRef(null);\n  const outputRef = useRef(null);\n\n  const getFrame = (videoStream) => {\n    // create a canvas element to draw the video frame on\n    const canvas = document.createElement(\"canvas\");\n    // get the canvas context\n    const ctx = canvas.getContext(\"2d\");\n    // set the canvas width and height to match the video dimensions\n    canvas.width = videoStream.videoWidth;\n    canvas.height = videoStream.videoHeight;\n\n    // draw the current video frame onto the canvas\n    ctx.drawImage(videoStream, 0, 0, canvas.width, canvas.height);\n    // get the image data from the canvas\n    const imageData = canvas.toDataURL(\"image/jpeg\");\n\n    return imageData;\n  };\n\n  const getVideo = () => {\n    socket.connect();\n    navigator.mediaDevices\n      .getUserMedia({ video: { width: 720 } })\n      .then((stream) => {\n        //Gets the current screen\n        let video = inputRef.current;\n        //Sets the Src of video Object\n        video.srcObject = stream;\n        //Plays the video\n        video.play();\n\n        setInterval(() => {\n          //Sets the output base 64 Images to videooutput\n          socket.on(\"output\", (data) => {\n            setVideoOutput(data);\n          });\n\n          // get a single frame from the video stream\n          const frame = getFrame(video);\n          // send the frame over the socket connection\n\n          socket.emit(\"stream\", frame);\n          window.requestAnimationFrame(sendFrame);\n        }, 1000);\n        const sendFrame = () => {};\n        sendFrame();\n      })\n      .catch((err) => {\n        console.error(\"error:\", err);\n      });\n  };\n\n  useEffect(() => {\n    getVideo();\n  }, [inputRef]);\n\n  useEffect(() => {\n    let output = outputRef.current;\n    const updateOutput = () => {\n      if (videoOutput != null) {\n        output.src = videoOutput;\n      }\n      // console.log(1);\n      window.requestAnimationFrame(updateOutput);\n    };\n    updateOutput();\n  }, [videoOutput]);\n\n  return (\n    <div>\n      <div>\n        <h1> Client </h1>\n        <video ref={inputRef} />\n        <h1> Server </h1>\n        <img alt=\"sever\" ref={outputRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default Camera;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}