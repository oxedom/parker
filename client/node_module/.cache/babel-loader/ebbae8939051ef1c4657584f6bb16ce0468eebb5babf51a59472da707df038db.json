{"ast":null,"code":"var _jsxFileName = \"/home/sam/projects/parker/client/src/comps/Camera.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:2000/');\nconst Camera = () => {\n  _s();\n  const [videoOutput, setVideoOutput] = useState();\n  const inputRef = useRef(null);\n  const outputRef = useRef(null);\n  const getFrame = videoStream => {\n    // create a canvas element to draw the video frame on\n    const canvas = document.createElement('canvas');\n    // get the canvas context\n    const ctx = canvas.getContext('2d');\n    // set the canvas width and height to match the video dimensions\n    canvas.width = videoStream.videoWidth;\n    canvas.height = videoStream.videoHeight;\n\n    // draw the current video frame onto the canvas\n    ctx.drawImage(videoStream, 0, 0, canvas.width, canvas.height);\n    // get the image data from the canvas\n    const imageData = canvas.toDataURL('image/jpeg');\n    return imageData;\n  };\n  const getVideo = () => {\n    socket.connect();\n    navigator.mediaDevices.getUserMedia({\n      video: {\n        width: 720\n      }\n    }).then(stream => {\n      //Gets the current screen\n      let video = inputRef.current;\n      //Sets the Src of video Object\n      video.srcObject = stream;\n      //Plays the video\n      video.play();\n      setInterval(() => {\n        //Sets the output base 64 Images to videooutput\n        socket.on('output', data => {\n          setVideoOutput(data);\n        });\n        socket.on('matt', data => {\n          console.log(data);\n        });\n\n        // get a single frame from the video stream\n        const frame = getFrame(video);\n        // send the frame over the socket connection\n        if (videoOutput !== null) {\n          socket.emit('stream', frame);\n        }\n\n        //23 Frame per secound\n      }, 10);\n    }).catch(err => {\n      console.error(\"error:\", err);\n    });\n  };\n  useEffect(() => {\n    getVideo();\n  }, [inputRef]);\n  useEffect(() => {\n    const updateOutput = () => {\n      let output = outputRef.current;\n      if (videoOutput != null) {\n        output.src = videoOutput;\n      }\n      window.requestAnimationFrame(updateOutput);\n    };\n    updateOutput();\n  }, [videoOutput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Client \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Server \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"sever\",\n        ref: outputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Camera, \"ULsd3TYd1MgFrGlsWPDP/ciw5sA=\");\n_c = Camera;\nexport default Camera;\nvar _c;\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","socket","Camera","videoOutput","setVideoOutput","inputRef","outputRef","getFrame","videoStream","canvas","document","createElement","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","imageData","toDataURL","getVideo","connect","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","play","setInterval","on","data","console","log","frame","emit","catch","err","error","updateOutput","output","src","window","requestAnimationFrame"],"sources":["/home/sam/projects/parker/client/src/comps/Camera.js"],"sourcesContent":["\n\n\nimport React, { useEffect, useRef, useState} from \"react\";\nimport io from 'socket.io-client';\n\nconst socket = io('http://localhost:2000/')\n\nconst Camera = () => {\n\n  const [videoOutput, setVideoOutput] = useState()\n\n  const inputRef = useRef(null);\n  const outputRef = useRef(null)\n\n\n  const getFrame = (videoStream) => {\n    // create a canvas element to draw the video frame on\n    const canvas = document.createElement('canvas');\n    // get the canvas context\n    const ctx = canvas.getContext('2d');\n    // set the canvas width and height to match the video dimensions\n    canvas.width = videoStream.videoWidth;\n    canvas.height = videoStream.videoHeight;\n  \n    // draw the current video frame onto the canvas\n    ctx.drawImage(videoStream, 0, 0, canvas.width, canvas.height);\n    // get the image data from the canvas\n    const imageData = canvas.toDataURL('image/jpeg');\n  \n    return imageData;\n  };\n\n\n  const getVideo = () => {\n    socket.connect()\n    navigator.mediaDevices\n      .getUserMedia({ video: { width:  720} })\n      .then(stream => {\n        \n        //Gets the current screen\n        let video = inputRef.current;\n        //Sets the Src of video Object\n        video.srcObject = stream;\n        //Plays the video\n        video.play();\n\n        setInterval(() => {\n      \n      //Sets the output base 64 Images to videooutput\n      socket.on('output', (data) => { setVideoOutput(data)}) \n      socket.on('matt', (data) => { console.log(data);}) \n        \n     // get a single frame from the video stream\n      const frame = getFrame(video);\n      // send the frame over the socket connection\n      if(videoOutput !== null) {socket.emit('stream', frame);}\n\n    \n\n        //23 Frame per secound\n        }, 10)\n\n\n      })\n      .catch(err => {\n        console.error(\"error:\", err);\n      });\n  };\n\n    useEffect(() => {\n    getVideo();\n  }, [inputRef]);\n\n\n\n\n\n\n  useEffect(() => {\n    const updateOutput = () => {\n\n      let output = outputRef.current;\n      if(videoOutput != null) {  output.src = videoOutput;}\n  \n      window.requestAnimationFrame(updateOutput);\n    }\n\n\n    updateOutput();\n  }, [videoOutput]);\n\n  return (\n    <div>\n      <div>\n        <h1> Client </h1>\n\n        <video ref={inputRef} />\n        <h1> Server </h1>\n        <img alt='sever' ref={outputRef} /> \n      </div>\n    </div>\n  );\n\n};\n\nexport default Camera;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}