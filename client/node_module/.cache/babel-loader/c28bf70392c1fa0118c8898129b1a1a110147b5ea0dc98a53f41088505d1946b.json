{"ast":null,"code":"import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1 ? {\n    type: PACKET_TYPES_REVERSE[type],\n    data: encodedPacket.substring(1)\n  } : {\n    type: PACKET_TYPES_REVERSE[type]\n  };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n  if (withNativeArrayBuffer) {\n    const decoded = decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return {\n      base64: true,\n      data\n    }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case \"arraybuffer\":\n    default:\n      return data;\n    // assuming the data is already an ArrayBuffer\n  }\n};\n\nexport default decodePacket;","map":{"version":3,"names":["ERROR_PACKET","PACKET_TYPES_REVERSE","decode","withNativeArrayBuffer","ArrayBuffer","decodePacket","encodedPacket","binaryType","type","data","mapBinary","charAt","decodeBase64Packet","substring","packetType","length","decoded","base64","Blob"],"sources":["/home/sam/projects/parker/node_modules/engine.io-parser/build/esm/decodePacket.browser.js"],"sourcesContent":["import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,cAAc;AACjE,SAASC,MAAM,QAAQ,iCAAiC;AACxD,MAAMC,qBAAqB,GAAG,OAAOC,WAAW,KAAK,UAAU;AAC/D,MAAMC,YAAY,GAAG,CAACC,aAAa,EAAEC,UAAU,KAAK;EAChD,IAAI,OAAOD,aAAa,KAAK,QAAQ,EAAE;IACnC,OAAO;MACHE,IAAI,EAAE,SAAS;MACfC,IAAI,EAAEC,SAAS,CAACJ,aAAa,EAAEC,UAAU;IAC7C,CAAC;EACL;EACA,MAAMC,IAAI,GAAGF,aAAa,CAACK,MAAM,CAAC,CAAC,CAAC;EACpC,IAAIH,IAAI,KAAK,GAAG,EAAE;IACd,OAAO;MACHA,IAAI,EAAE,SAAS;MACfC,IAAI,EAAEG,kBAAkB,CAACN,aAAa,CAACO,SAAS,CAAC,CAAC,CAAC,EAAEN,UAAU;IACnE,CAAC;EACL;EACA,MAAMO,UAAU,GAAGb,oBAAoB,CAACO,IAAI,CAAC;EAC7C,IAAI,CAACM,UAAU,EAAE;IACb,OAAOd,YAAY;EACvB;EACA,OAAOM,aAAa,CAACS,MAAM,GAAG,CAAC,GACzB;IACEP,IAAI,EAAEP,oBAAoB,CAACO,IAAI,CAAC;IAChCC,IAAI,EAAEH,aAAa,CAACO,SAAS,CAAC,CAAC;EACnC,CAAC,GACC;IACEL,IAAI,EAAEP,oBAAoB,CAACO,IAAI;EACnC,CAAC;AACT,CAAC;AACD,MAAMI,kBAAkB,GAAG,CAACH,IAAI,EAAEF,UAAU,KAAK;EAC7C,IAAIJ,qBAAqB,EAAE;IACvB,MAAMa,OAAO,GAAGd,MAAM,CAACO,IAAI,CAAC;IAC5B,OAAOC,SAAS,CAACM,OAAO,EAAET,UAAU,CAAC;EACzC,CAAC,MACI;IACD,OAAO;MAAEU,MAAM,EAAE,IAAI;MAAER;IAAK,CAAC,CAAC,CAAC;EACnC;AACJ,CAAC;;AACD,MAAMC,SAAS,GAAG,CAACD,IAAI,EAAEF,UAAU,KAAK;EACpC,QAAQA,UAAU;IACd,KAAK,MAAM;MACP,OAAOE,IAAI,YAAYL,WAAW,GAAG,IAAIc,IAAI,CAAC,CAACT,IAAI,CAAC,CAAC,GAAGA,IAAI;IAChE,KAAK,aAAa;IAClB;MACI,OAAOA,IAAI;IAAE;EAAA;AAEzB,CAAC;;AACD,eAAeJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}