{"ast":null,"code":"var _jsxFileName = \"/home/sam/projects/parker/client/src/comps/Webcam.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socketio from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Webcam = () => {\n  _s();\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [webcamEnabled, setWebcamEnabled] = useState(false);\n  const handleClick = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      setWebcamEnabled(true);\n    }).catch(error => {\n      setError(error);\n    });\n  };\n\n  // useEffect(() => {\n  //   if (webcamEnabled && stream) {\n  //     const socket = socketio.connect('http://localhost:2000');\n\n  //     socket.on('connect', () => {\n  //       console.log('Connected to the server');\n  //     });\n\n  //     const sendData = () => {\n  //       socket.emit('stream', stream);\n  //     };\n\n  //     const intervalId = setInterval(sendData, 1000); // send data every second\n\n  //     setSocket(socket);\n\n  //     return () => {\n  //       clearInterval(intervalId);\n  //       socket.disconnect();\n  //     };\n  //   }\n  // }, [webcamEnabled, stream]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), webcamEnabled ? /*#__PURE__*/_jsxDEV(\"video\", {\n      src: URL.createObjectURL(stream),\n      autoPlay: true,\n      style: {\n        width: '100%',\n        height: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Access Webcam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Webcam, \"z3Vaj/ja8nY0GLgokjGnqk0kxxw=\");\n_c = Webcam;\nexport default Webcam;\nvar _c;\n$RefreshReg$(_c, \"Webcam\");","map":{"version":3,"names":["React","useState","useEffect","socketio","Webcam","stream","setStream","error","setError","socket","setSocket","webcamEnabled","setWebcamEnabled","handleClick","navigator","mediaDevices","getUserMedia","video","audio","then","catch","message","URL","createObjectURL","width","height"],"sources":["/home/sam/projects/parker/client/src/comps/Webcam.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport socketio from 'socket.io-client';\n\nconst Webcam = () => {\n  const [stream, setStream] = useState(null);\n  const [error, setError] = useState(null);\n  const [socket, setSocket] = useState(null);\n  const [webcamEnabled, setWebcamEnabled] = useState(false);\n\n  const handleClick = () => {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then(stream => {\n        setStream(stream);\n        setWebcamEnabled(true);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }\n\n  // useEffect(() => {\n  //   if (webcamEnabled && stream) {\n  //     const socket = socketio.connect('http://localhost:2000');\n\n  //     socket.on('connect', () => {\n  //       console.log('Connected to the server');\n  //     });\n\n  //     const sendData = () => {\n  //       socket.emit('stream', stream);\n  //     };\n\n  //     const intervalId = setInterval(sendData, 1000); // send data every second\n\n  //     setSocket(socket);\n\n  //     return () => {\n  //       clearInterval(intervalId);\n  //       socket.disconnect();\n  //     };\n  //   }\n  // }, [webcamEnabled, stream]);\n\n  return (\n    <div>\n      {error && <p>{error.message}</p>}\n      {webcamEnabled ? (\n        <video\n          src={URL.createObjectURL(stream)}\n          autoPlay\n          style={{ width: '100%', height: '100%' }}\n        />\n      ) : (\n        <button onClick={handleClick}>Access Webcam</button>\n      )}\n    </div>\n  );\n};\n\nexport default Webcam;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,kBAAkB;AAAC;AAExC,MAAMC,MAAM,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMY,WAAW,GAAG,MAAM;IACxBC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAC9DC,IAAI,CAACd,MAAM,IAAI;MACdC,SAAS,CAACD,MAAM,CAAC;MACjBO,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDQ,KAAK,CAACb,KAAK,IAAI;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,WACGA,KAAK,iBAAI;MAAA,UAAIA,KAAK,CAACc;IAAO;MAAA;MAAA;MAAA;IAAA,QAAK,EAC/BV,aAAa,gBACZ;MACE,GAAG,EAAEW,GAAG,CAACC,eAAe,CAAClB,MAAM,CAAE;MACjC,QAAQ;MACR,KAAK,EAAE;QAAEmB,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QACzC,gBAEF;MAAQ,OAAO,EAAEZ,WAAY;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAC5C;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAtDIT,MAAM;AAAA,KAANA,MAAM;AAwDZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}